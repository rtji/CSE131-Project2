Terminals unused in grammar

   T_LessEqual
   T_GreaterEqual
   T_EQ
   T_NE
   T_LeftAngle
   T_RightAngle
   T_And
   T_Or
   T_MulAssign
   T_DivAssign
   T_AddAssign
   T_SubAssign
   T_While
   T_For
   T_If
   T_Else
   T_Return
   T_Break
   T_Const
   T_Uniform
   T_Layout
   T_Continue
   T_Do
   T_Inc
   T_Dec
   T_Switch
   T_Case
   T_Default
   T_In
   T_Out
   T_InOut
   T_Struct
   T_Dot
   T_Colon
   T_Question
   T_Comma
   T_Dash
   T_Plus
   T_Star
   T_Slash
   T_LeftParen
   T_RightParen
   T_LeftBracket
   T_RightBracket


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: DeclList declaration
    3         | declaration

    4 declaration: singleDecl
    5            | functionDecl

    6 singleDecl: Type T_Identifier T_Semicolon
    7           | Type T_Identifier T_Equal primaryExp T_Semicolon
    8           | T_Identifier T_Equal primaryExp T_Semicolon

    9 functionDecl: Type T_Identifier T_LeftBrace T_RightBrace

   10 Type: T_Void
   11     | T_Float
   12     | T_Int
   13     | T_Uint
   14     | T_Bool
   15     | T_Vec2
   16     | T_Vec3
   17     | T_Vec4
   18     | T_Bvec2
   19     | T_Bvec3
   20     | T_Bvec4
   21     | T_Ivec2
   22     | T_Ivec3
   23     | T_Ivec4
   24     | T_Uvec2
   25     | T_Uvec3
   26     | T_Uvec4
   27     | T_Mat2
   28     | T_Mat3
   29     | T_Mat4

   30 primaryExp: /* empty */
   31           | T_IntConstant
   32           | T_FloatConstant
   33           | T_BoolConstant


Terminals, with rules where they appear

$end (0) 0
error (256)
T_Void (258) 10
T_Bool (259) 14
T_Int (260) 12
T_Float (261) 11
T_LessEqual (262)
T_GreaterEqual (263)
T_EQ (264)
T_NE (265)
T_LeftAngle (266)
T_RightAngle (267)
T_And (268)
T_Or (269)
T_Equal (270) 7 8
T_MulAssign (271)
T_DivAssign (272)
T_AddAssign (273)
T_SubAssign (274)
T_While (275)
T_For (276)
T_If (277)
T_Else (278)
T_Return (279)
T_Break (280)
T_Const (281)
T_Uniform (282)
T_Layout (283)
T_Continue (284)
T_Do (285)
T_Inc (286)
T_Dec (287)
T_Switch (288)
T_Case (289)
T_Default (290)
T_In (291)
T_Out (292)
T_InOut (293)
T_Mat2 (294) 27
T_Mat3 (295) 28
T_Mat4 (296) 29
T_Vec2 (297) 15
T_Vec3 (298) 16
T_Vec4 (299) 17
T_Ivec2 (300) 21
T_Ivec3 (301) 22
T_Ivec4 (302) 23
T_Bvec2 (303) 18
T_Bvec3 (304) 19
T_Bvec4 (305) 20
T_Uint (306) 13
T_Uvec2 (307) 24
T_Uvec3 (308) 25
T_Uvec4 (309) 26
T_Struct (310)
T_Semicolon (311) 6 7 8
T_Dot (312)
T_Colon (313)
T_Question (314)
T_Comma (315)
T_Dash (316)
T_Plus (317)
T_Star (318)
T_Slash (319)
T_LeftParen (320)
T_RightParen (321)
T_LeftBracket (322)
T_RightBracket (323)
T_LeftBrace (324) 9
T_RightBrace (325) 9
T_Identifier (326) 6 7 8 9
T_IntConstant (327) 31
T_FloatConstant (328) 32
T_BoolConstant (329) 33


Nonterminals, with rules where they appear

$accept (75)
    on left: 0
Program (76)
    on left: 1, on right: 0
DeclList (77)
    on left: 2 3, on right: 1 2
declaration (78)
    on left: 4 5, on right: 2 3
singleDecl (79)
    on left: 6 7 8, on right: 4
functionDecl (80)
    on left: 9, on right: 5
Type (81)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
    28 29, on right: 6 7 9
primaryExp (82)
    on left: 30 31 32 33, on right: 7 8


state 0

    0 $accept: . Program $end

    T_Void        shift, and go to state 1
    T_Bool        shift, and go to state 2
    T_Int         shift, and go to state 3
    T_Float       shift, and go to state 4
    T_Mat2        shift, and go to state 5
    T_Mat3        shift, and go to state 6
    T_Mat4        shift, and go to state 7
    T_Vec2        shift, and go to state 8
    T_Vec3        shift, and go to state 9
    T_Vec4        shift, and go to state 10
    T_Ivec2       shift, and go to state 11
    T_Ivec3       shift, and go to state 12
    T_Ivec4       shift, and go to state 13
    T_Bvec2       shift, and go to state 14
    T_Bvec3       shift, and go to state 15
    T_Bvec4       shift, and go to state 16
    T_Uint        shift, and go to state 17
    T_Uvec2       shift, and go to state 18
    T_Uvec3       shift, and go to state 19
    T_Uvec4       shift, and go to state 20
    T_Identifier  shift, and go to state 21

    Program       go to state 22
    DeclList      go to state 23
    declaration   go to state 24
    singleDecl    go to state 25
    functionDecl  go to state 26
    Type          go to state 27


state 1

   10 Type: T_Void .

    $default  reduce using rule 10 (Type)


state 2

   14 Type: T_Bool .

    $default  reduce using rule 14 (Type)


state 3

   12 Type: T_Int .

    $default  reduce using rule 12 (Type)


state 4

   11 Type: T_Float .

    $default  reduce using rule 11 (Type)


state 5

   27 Type: T_Mat2 .

    $default  reduce using rule 27 (Type)


state 6

   28 Type: T_Mat3 .

    $default  reduce using rule 28 (Type)


state 7

   29 Type: T_Mat4 .

    $default  reduce using rule 29 (Type)


state 8

   15 Type: T_Vec2 .

    $default  reduce using rule 15 (Type)


state 9

   16 Type: T_Vec3 .

    $default  reduce using rule 16 (Type)


state 10

   17 Type: T_Vec4 .

    $default  reduce using rule 17 (Type)


state 11

   21 Type: T_Ivec2 .

    $default  reduce using rule 21 (Type)


state 12

   22 Type: T_Ivec3 .

    $default  reduce using rule 22 (Type)


state 13

   23 Type: T_Ivec4 .

    $default  reduce using rule 23 (Type)


state 14

   18 Type: T_Bvec2 .

    $default  reduce using rule 18 (Type)


state 15

   19 Type: T_Bvec3 .

    $default  reduce using rule 19 (Type)


state 16

   20 Type: T_Bvec4 .

    $default  reduce using rule 20 (Type)


state 17

   13 Type: T_Uint .

    $default  reduce using rule 13 (Type)


state 18

   24 Type: T_Uvec2 .

    $default  reduce using rule 24 (Type)


state 19

   25 Type: T_Uvec3 .

    $default  reduce using rule 25 (Type)


state 20

   26 Type: T_Uvec4 .

    $default  reduce using rule 26 (Type)


state 21

    8 singleDecl: T_Identifier . T_Equal primaryExp T_Semicolon

    T_Equal  shift, and go to state 28


state 22

    0 $accept: Program . $end

    $end  shift, and go to state 29


state 23

    1 Program: DeclList .
    2 DeclList: DeclList . declaration

    T_Void        shift, and go to state 1
    T_Bool        shift, and go to state 2
    T_Int         shift, and go to state 3
    T_Float       shift, and go to state 4
    T_Mat2        shift, and go to state 5
    T_Mat3        shift, and go to state 6
    T_Mat4        shift, and go to state 7
    T_Vec2        shift, and go to state 8
    T_Vec3        shift, and go to state 9
    T_Vec4        shift, and go to state 10
    T_Ivec2       shift, and go to state 11
    T_Ivec3       shift, and go to state 12
    T_Ivec4       shift, and go to state 13
    T_Bvec2       shift, and go to state 14
    T_Bvec3       shift, and go to state 15
    T_Bvec4       shift, and go to state 16
    T_Uint        shift, and go to state 17
    T_Uvec2       shift, and go to state 18
    T_Uvec3       shift, and go to state 19
    T_Uvec4       shift, and go to state 20
    T_Identifier  shift, and go to state 21

    $default  reduce using rule 1 (Program)

    declaration   go to state 30
    singleDecl    go to state 25
    functionDecl  go to state 26
    Type          go to state 27


state 24

    3 DeclList: declaration .

    $default  reduce using rule 3 (DeclList)


state 25

    4 declaration: singleDecl .

    $default  reduce using rule 4 (declaration)


state 26

    5 declaration: functionDecl .

    $default  reduce using rule 5 (declaration)


state 27

    6 singleDecl: Type . T_Identifier T_Semicolon
    7           | Type . T_Identifier T_Equal primaryExp T_Semicolon
    9 functionDecl: Type . T_Identifier T_LeftBrace T_RightBrace

    T_Identifier  shift, and go to state 31


state 28

    8 singleDecl: T_Identifier T_Equal . primaryExp T_Semicolon

    T_IntConstant    shift, and go to state 32
    T_FloatConstant  shift, and go to state 33
    T_BoolConstant   shift, and go to state 34

    $default  reduce using rule 30 (primaryExp)

    primaryExp  go to state 35


state 29

    0 $accept: Program $end .

    $default  accept


state 30

    2 DeclList: DeclList declaration .

    $default  reduce using rule 2 (DeclList)


state 31

    6 singleDecl: Type T_Identifier . T_Semicolon
    7           | Type T_Identifier . T_Equal primaryExp T_Semicolon
    9 functionDecl: Type T_Identifier . T_LeftBrace T_RightBrace

    T_Equal      shift, and go to state 36
    T_Semicolon  shift, and go to state 37
    T_LeftBrace  shift, and go to state 38


state 32

   31 primaryExp: T_IntConstant .

    $default  reduce using rule 31 (primaryExp)


state 33

   32 primaryExp: T_FloatConstant .

    $default  reduce using rule 32 (primaryExp)


state 34

   33 primaryExp: T_BoolConstant .

    $default  reduce using rule 33 (primaryExp)


state 35

    8 singleDecl: T_Identifier T_Equal primaryExp . T_Semicolon

    T_Semicolon  shift, and go to state 39


state 36

    7 singleDecl: Type T_Identifier T_Equal . primaryExp T_Semicolon

    T_IntConstant    shift, and go to state 32
    T_FloatConstant  shift, and go to state 33
    T_BoolConstant   shift, and go to state 34

    $default  reduce using rule 30 (primaryExp)

    primaryExp  go to state 40


state 37

    6 singleDecl: Type T_Identifier T_Semicolon .

    $default  reduce using rule 6 (singleDecl)


state 38

    9 functionDecl: Type T_Identifier T_LeftBrace . T_RightBrace

    T_RightBrace  shift, and go to state 41


state 39

    8 singleDecl: T_Identifier T_Equal primaryExp T_Semicolon .

    $default  reduce using rule 8 (singleDecl)


state 40

    7 singleDecl: Type T_Identifier T_Equal primaryExp . T_Semicolon

    T_Semicolon  shift, and go to state 42


state 41

    9 functionDecl: Type T_Identifier T_LeftBrace T_RightBrace .

    $default  reduce using rule 9 (functionDecl)


state 42

    7 singleDecl: Type T_Identifier T_Equal primaryExp T_Semicolon .

    $default  reduce using rule 7 (singleDecl)
