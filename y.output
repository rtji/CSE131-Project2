Nonterminals useless in grammar

   translation_unit
   external_declaration


Terminals unused in grammar

   T_Layout
   T_Continue
   T_InOut
   T_Struct


Rules useless in grammar

  145 translation_unit: external_declaration
  146                 | translation_unit external_declaration

  147 external_declaration: function_definition
  148                     | declaration


Rules useless in parser due to conflicts

   23 function_identifier: /* empty */

   24 unary_expression: postfix_expression


State 40 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 54 conflicts: 1 shift/reduce
State 56 conflicts: 1 shift/reduce
State 57 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 60 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 73 conflicts: 4 shift/reduce, 66 reduce/reduce
State 77 conflicts: 1 shift/reduce
State 80 conflicts: 1 shift/reduce
State 82 conflicts: 2 shift/reduce
State 88 conflicts: 1 shift/reduce
State 96 conflicts: 1 shift/reduce
State 97 conflicts: 1 shift/reduce
State 107 conflicts: 1 shift/reduce
State 112 conflicts: 1 shift/reduce
State 113 conflicts: 1 shift/reduce
State 114 conflicts: 1 shift/reduce
State 123 conflicts: 1 shift/reduce
State 128 conflicts: 1 shift/reduce
State 132 conflicts: 1 shift/reduce
State 134 conflicts: 1 shift/reduce
State 144 conflicts: 1 shift/reduce
State 146 conflicts: 1 shift/reduce
State 147 conflicts: 1 shift/reduce
State 148 conflicts: 1 shift/reduce
State 149 conflicts: 1 shift/reduce
State 150 conflicts: 1 shift/reduce
State 151 conflicts: 1 shift/reduce
State 152 conflicts: 1 shift/reduce
State 153 conflicts: 1 shift/reduce
State 154 conflicts: 1 shift/reduce
State 155 conflicts: 1 shift/reduce
State 156 conflicts: 1 shift/reduce
State 157 conflicts: 1 shift/reduce
State 158 conflicts: 1 shift/reduce
State 164 conflicts: 1 shift/reduce
State 176 conflicts: 1 shift/reduce
State 192 conflicts: 2 shift/reduce
State 193 conflicts: 2 shift/reduce
State 194 conflicts: 2 shift/reduce
State 195 conflicts: 2 shift/reduce
State 205 conflicts: 1 shift/reduce
State 209 conflicts: 1 shift/reduce
State 210 conflicts: 1 shift/reduce
State 213 conflicts: 1 shift/reduce
State 215 conflicts: 1 shift/reduce
State 219 conflicts: 1 shift/reduce
State 220 conflicts: 1 shift/reduce
State 221 conflicts: 1 shift/reduce
State 223 conflicts: 1 shift/reduce
State 225 conflicts: 1 shift/reduce
State 229 conflicts: 1 shift/reduce
State 231 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: DeclList declaration
    3         | declaration

    4 primary_expression: T_Identifier
    5                   | T_IntConstant
    6                   | T_FloatConstant
    7                   | T_BoolConstant
    8                   | T_LeftParen assignment_expression T_RightParen

    9 postfix_expression: primary_expression
   10                   | postfix_expression T_LeftBracket assignment_expression T_RightBracket
   11                   | function_call_generic
   12                   | postfix_expression
   13                   | postfix_expression T_Dot T_Identifier
   14                   | postfix_expression T_Inc
   15                   | postfix_expression T_Dec

   16 function_call_generic: function_call_header_with_parameters T_RightParen
   17                      | function_call_header_no_parameters T_RightParen

   18 function_call_header_no_parameters: function_call_header T_Void
   19                                   | function_call_header

   20 function_call_header_with_parameters: function_call_header assignment_expression
   21                                     | function_call_header_with_parameters T_Comma assignment_expression

   22 function_call_header: function_identifier T_LeftParen

   23 function_identifier: /* empty */

   24 unary_expression: postfix_expression
   25                 | T_Inc unary_expression
   26                 | T_Dec unary_expression
   27                 | unary_operator unary_expression

   28 unary_operator: T_Plus
   29               | T_Dash

   30 multiplicative_expression: unary_expression
   31                          | multiplicative_expression T_Star unary_expression
   32                          | multiplicative_expression T_Slash unary_expression

   33 additive_expression: multiplicative_expression
   34                    | additive_expression T_Plus multiplicative_expression
   35                    | additive_expression T_Dash multiplicative_expression

   36 relational_expression: additive_expression
   37                      | relational_expression T_LeftAngle additive_expression
   38                      | relational_expression T_RightAngle additive_expression
   39                      | relational_expression T_LessEqual additive_expression
   40                      | relational_expression T_GreaterEqual additive_expression

   41 equality_expression: relational_expression
   42                    | equality_expression T_EQ relational_expression
   43                    | equality_expression T_NE relational_expression

   44 logical_and_expression: equality_expression
   45                       | logical_and_expression T_And equality_expression

   46 logical_or_expression: logical_and_expression
   47                      | logical_or_expression T_Or logical_and_expression

   48 conditional_expression: logical_or_expression
   49                       | logical_or_expression T_Question assignment_expression T_Colon assignment_expression

   50 assignment_expression: conditional_expression
   51                      | unary_expression assignment_operator assignment_expression

   52 assignment_operator: T_Equal
   53                    | T_MulAssign
   54                    | T_DivAssign
   55                    | T_AddAssign
   56                    | T_SubAssign

   57 declaration: function_prototype T_Semicolon
   58            | function_definition
   59            | single_declaration T_Semicolon

   60 function_prototype: function_declarator T_RightParen

   61 function_declarator: function_header
   62                    | function_header_with_parameters

   63 function_header_with_parameters: function_header parameter_declaration
   64                                | function_header_with_parameters T_Comma parameter_declaration

   65 function_header: type_specifier T_Identifier T_LeftParen
   66                | type_qualifier type_specifier T_Identifier T_LeftParen

   67 parameter_declaration: type_specifier T_Identifier

   68 single_declaration: type_specifier T_Identifier
   69                   | type_qualifier type_specifier T_Identifier
   70                   | type_specifier T_Identifier array_specifier
   71                   | type_specifier T_Identifier T_Equal assignment_expression

   72 type_qualifier: T_Const
   73               | T_In
   74               | T_Out
   75               | T_Uniform

   76 type_specifier: type_specifier_nonarray
   77               | type_specifier_nonarray array_specifier

   78 array_specifier: T_LeftBracket conditional_expression T_RightBracket

   79 type_specifier_nonarray: T_Void
   80                        | T_Float
   81                        | T_Int
   82                        | T_Uint
   83                        | T_Bool
   84                        | T_Vec2
   85                        | T_Vec3
   86                        | T_Vec4
   87                        | T_Bvec2
   88                        | T_Bvec3
   89                        | T_Bvec4
   90                        | T_Ivec2
   91                        | T_Ivec3
   92                        | T_Ivec4
   93                        | T_Uvec2
   94                        | T_Uvec3
   95                        | T_Uvec4
   96                        | T_Mat2
   97                        | T_Mat3
   98                        | T_Mat4

   99 declaration_statement: assignment_expression

  100 statement: compound_statement_with_scope
  101          | simple_statement

  102 statement_no_new_scope: compound_statement_no_new_scope
  103                       | simple_statement

  104 statement_with_scope: compound_statement_no_new_scope
  105                     | simple_statement

  106 simple_statement: declaration_statement
  107                 | expression_statement
  108                 | selection_statement
  109                 | switch_statement
  110                 | case_label
  111                 | iteration_statement
  112                 | jump_statement

  113 compound_statement_with_scope: T_LeftBrace T_RightBrace
  114                              | T_LeftBrace statement_list T_RightBrace

  115 compound_statement_no_new_scope: T_LeftBrace T_RightBrace
  116                                | T_LeftBrace statement_list T_RightBrace
  117                                | T_LeftBrace var_decl_list T_RightBrace
  118                                | T_LeftBrace var_decl_list statement_list T_RightBrace

  119 var_decl_list: single_declaration
  120              | var_decl_list single_declaration

  121 statement_list: statement
  122               | statement_list statement

  123 expression_statement: T_Semicolon
  124                     | assignment_expression T_Semicolon

  125 selection_statement: T_If T_LeftParen assignment_expression T_RightParen statement_with_scope
  126                    | T_If T_LeftParen assignment_expression T_RightParen statement_with_scope T_Else statement_with_scope

  127 condition: assignment_expression
  128          | type_specifier T_Identifier T_Equal assignment_expression
  129          | type_qualifier type_specifier T_Identifier T_Equal assignment_expression

  130 switch_statement: T_Switch T_LeftParen assignment_expression T_RightParen T_LeftBrace statement_list T_RightBrace

  131 case_label: T_Case assignment_expression T_Colon
  132           | T_Default T_Colon

  133 iteration_statement: T_While T_LeftParen condition T_RightParen statement_no_new_scope
  134                    | T_Do statement_with_scope T_While T_LeftParen assignment_expression T_RightParen T_Semicolon
  135                    | T_For T_LeftParen for_init_statement for_rest_statement T_RightParen statement_no_new_scope

  136 for_init_statement: expression_statement
  137                   | declaration_statement

  138 conditionopt: condition

  139 for_rest_statement: conditionopt T_Semicolon
  140                   | conditionopt T_Semicolon assignment_expression

  141 jump_statement: T_Break T_Semicolon
  142               | T_Return T_Semicolon
  143               | T_Return assignment_expression T_Semicolon

  144 function_definition: function_prototype compound_statement_no_new_scope


Terminals, with rules where they appear

$end (0) 0
error (256)
T_Void (258) 18 79
T_Bool (259) 83
T_Int (260) 81
T_Float (261) 80
T_LessEqual (262) 39
T_GreaterEqual (263) 40
T_EQ (264) 42
T_NE (265) 43
T_LeftAngle (266) 37
T_RightAngle (267) 38
T_And (268) 45
T_Or (269) 47
T_Equal (270) 52 71 128 129
T_MulAssign (271) 53
T_DivAssign (272) 54
T_AddAssign (273) 55
T_SubAssign (274) 56
T_While (275) 133 134
T_For (276) 135
T_If (277) 125 126
T_Else (278) 126
T_Return (279) 142 143
T_Break (280) 141
T_Const (281) 72
T_Uniform (282) 75
T_Layout (283)
T_Continue (284)
T_Do (285) 134
T_Inc (286) 14 25
T_Dec (287) 15 26
T_Switch (288) 130
T_Case (289) 131
T_Default (290) 132
T_In (291) 73
T_Out (292) 74
T_InOut (293)
T_Mat2 (294) 96
T_Mat3 (295) 97
T_Mat4 (296) 98
T_Vec2 (297) 84
T_Vec3 (298) 85
T_Vec4 (299) 86
T_Ivec2 (300) 90
T_Ivec3 (301) 91
T_Ivec4 (302) 92
T_Bvec2 (303) 87
T_Bvec3 (304) 88
T_Bvec4 (305) 89
T_Uint (306) 82
T_Uvec2 (307) 93
T_Uvec3 (308) 94
T_Uvec4 (309) 95
T_Struct (310)
T_Semicolon (311) 57 59 123 124 134 139 140 141 142 143
T_Dot (312) 13
T_Colon (313) 49 131 132
T_Question (314) 49
T_Comma (315) 21 64
T_Dash (316) 29 35
T_Plus (317) 28 34
T_Star (318) 31
T_Slash (319) 32
T_LeftParen (320) 8 22 65 66 125 126 130 133 134 135
T_RightParen (321) 8 16 17 60 125 126 130 133 134 135
T_LeftBracket (322) 10 78
T_RightBracket (323) 10 78
T_LeftBrace (324) 113 114 115 116 117 118 130
T_RightBrace (325) 113 114 115 116 117 118 130
T_Identifier (326) 4 13 65 66 67 68 69 70 71 128 129
T_IntConstant (327) 5
T_FloatConstant (328) 6
T_BoolConstant (329) 7


Nonterminals, with rules where they appear

$accept (75)
    on left: 0
Program (76)
    on left: 1, on right: 0
DeclList (77)
    on left: 2 3, on right: 1 2
primary_expression (78)
    on left: 4 5 6 7 8, on right: 9
postfix_expression (79)
    on left: 9 10 11 12 13 14 15, on right: 10 12 13 14 15 24
function_call_generic (80)
    on left: 16 17, on right: 11
function_call_header_no_parameters (81)
    on left: 18 19, on right: 17
function_call_header_with_parameters (82)
    on left: 20 21, on right: 16 21
function_call_header (83)
    on left: 22, on right: 18 19 20
function_identifier (84)
    on left: 23, on right: 22
unary_expression (85)
    on left: 24 25 26 27, on right: 25 26 27 30 31 32 51
unary_operator (86)
    on left: 28 29, on right: 27
multiplicative_expression (87)
    on left: 30 31 32, on right: 31 32 33 34 35
additive_expression (88)
    on left: 33 34 35, on right: 34 35 36 37 38 39 40
relational_expression (89)
    on left: 36 37 38 39 40, on right: 37 38 39 40 41 42 43
equality_expression (90)
    on left: 41 42 43, on right: 42 43 44 45
logical_and_expression (91)
    on left: 44 45, on right: 45 46 47
logical_or_expression (92)
    on left: 46 47, on right: 47 48 49
conditional_expression (93)
    on left: 48 49, on right: 50 78
assignment_expression (94)
    on left: 50 51, on right: 8 10 20 21 49 51 71 99 124 125 126 127
    128 129 130 131 134 140 143
assignment_operator (95)
    on left: 52 53 54 55 56, on right: 51
declaration (96)
    on left: 57 58 59, on right: 2 3
function_prototype (97)
    on left: 60, on right: 57 144
function_declarator (98)
    on left: 61 62, on right: 60
function_header_with_parameters (99)
    on left: 63 64, on right: 62 64
function_header (100)
    on left: 65 66, on right: 61 63
parameter_declaration (101)
    on left: 67, on right: 63 64
single_declaration (102)
    on left: 68 69 70 71, on right: 59 119 120
type_qualifier (103)
    on left: 72 73 74 75, on right: 66 69 129
type_specifier (104)
    on left: 76 77, on right: 65 66 67 68 69 70 71 128 129
array_specifier (105)
    on left: 78, on right: 70 77
type_specifier_nonarray (106)
    on left: 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96
    97 98, on right: 76 77
declaration_statement (107)
    on left: 99, on right: 106 137
statement (108)
    on left: 100 101, on right: 121 122
statement_no_new_scope (109)
    on left: 102 103, on right: 133 135
statement_with_scope (110)
    on left: 104 105, on right: 125 126 134
simple_statement (111)
    on left: 106 107 108 109 110 111 112, on right: 101 103 105
compound_statement_with_scope (112)
    on left: 113 114, on right: 100
compound_statement_no_new_scope (113)
    on left: 115 116 117 118, on right: 102 104 144
var_decl_list (114)
    on left: 119 120, on right: 117 118 120
statement_list (115)
    on left: 121 122, on right: 114 116 118 122 130
expression_statement (116)
    on left: 123 124, on right: 107 136
selection_statement (117)
    on left: 125 126, on right: 108
condition (118)
    on left: 127 128 129, on right: 133 138
switch_statement (119)
    on left: 130, on right: 109
case_label (120)
    on left: 131 132, on right: 110
iteration_statement (121)
    on left: 133 134 135, on right: 111
for_init_statement (122)
    on left: 136 137, on right: 135
conditionopt (123)
    on left: 138, on right: 139 140
for_rest_statement (124)
    on left: 139 140, on right: 135
jump_statement (125)
    on left: 141 142 143, on right: 112
function_definition (126)
    on left: 144, on right: 58


state 0

    0 $accept: . Program $end

    T_Void     shift, and go to state 1
    T_Bool     shift, and go to state 2
    T_Int      shift, and go to state 3
    T_Float    shift, and go to state 4
    T_Const    shift, and go to state 5
    T_Uniform  shift, and go to state 6
    T_In       shift, and go to state 7
    T_Out      shift, and go to state 8
    T_Mat2     shift, and go to state 9
    T_Mat3     shift, and go to state 10
    T_Mat4     shift, and go to state 11
    T_Vec2     shift, and go to state 12
    T_Vec3     shift, and go to state 13
    T_Vec4     shift, and go to state 14
    T_Ivec2    shift, and go to state 15
    T_Ivec3    shift, and go to state 16
    T_Ivec4    shift, and go to state 17
    T_Bvec2    shift, and go to state 18
    T_Bvec3    shift, and go to state 19
    T_Bvec4    shift, and go to state 20
    T_Uint     shift, and go to state 21
    T_Uvec2    shift, and go to state 22
    T_Uvec3    shift, and go to state 23
    T_Uvec4    shift, and go to state 24

    Program                          go to state 25
    DeclList                         go to state 26
    declaration                      go to state 27
    function_prototype               go to state 28
    function_declarator              go to state 29
    function_header_with_parameters  go to state 30
    function_header                  go to state 31
    single_declaration               go to state 32
    type_qualifier                   go to state 33
    type_specifier                   go to state 34
    type_specifier_nonarray          go to state 35
    function_definition              go to state 36


state 1

   79 type_specifier_nonarray: T_Void .

    $default  reduce using rule 79 (type_specifier_nonarray)


state 2

   83 type_specifier_nonarray: T_Bool .

    $default  reduce using rule 83 (type_specifier_nonarray)


state 3

   81 type_specifier_nonarray: T_Int .

    $default  reduce using rule 81 (type_specifier_nonarray)


state 4

   80 type_specifier_nonarray: T_Float .

    $default  reduce using rule 80 (type_specifier_nonarray)


state 5

   72 type_qualifier: T_Const .

    $default  reduce using rule 72 (type_qualifier)


state 6

   75 type_qualifier: T_Uniform .

    $default  reduce using rule 75 (type_qualifier)


state 7

   73 type_qualifier: T_In .

    $default  reduce using rule 73 (type_qualifier)


state 8

   74 type_qualifier: T_Out .

    $default  reduce using rule 74 (type_qualifier)


state 9

   96 type_specifier_nonarray: T_Mat2 .

    $default  reduce using rule 96 (type_specifier_nonarray)


state 10

   97 type_specifier_nonarray: T_Mat3 .

    $default  reduce using rule 97 (type_specifier_nonarray)


state 11

   98 type_specifier_nonarray: T_Mat4 .

    $default  reduce using rule 98 (type_specifier_nonarray)


state 12

   84 type_specifier_nonarray: T_Vec2 .

    $default  reduce using rule 84 (type_specifier_nonarray)


state 13

   85 type_specifier_nonarray: T_Vec3 .

    $default  reduce using rule 85 (type_specifier_nonarray)


state 14

   86 type_specifier_nonarray: T_Vec4 .

    $default  reduce using rule 86 (type_specifier_nonarray)


state 15

   90 type_specifier_nonarray: T_Ivec2 .

    $default  reduce using rule 90 (type_specifier_nonarray)


state 16

   91 type_specifier_nonarray: T_Ivec3 .

    $default  reduce using rule 91 (type_specifier_nonarray)


state 17

   92 type_specifier_nonarray: T_Ivec4 .

    $default  reduce using rule 92 (type_specifier_nonarray)


state 18

   87 type_specifier_nonarray: T_Bvec2 .

    $default  reduce using rule 87 (type_specifier_nonarray)


state 19

   88 type_specifier_nonarray: T_Bvec3 .

    $default  reduce using rule 88 (type_specifier_nonarray)


state 20

   89 type_specifier_nonarray: T_Bvec4 .

    $default  reduce using rule 89 (type_specifier_nonarray)


state 21

   82 type_specifier_nonarray: T_Uint .

    $default  reduce using rule 82 (type_specifier_nonarray)


state 22

   93 type_specifier_nonarray: T_Uvec2 .

    $default  reduce using rule 93 (type_specifier_nonarray)


state 23

   94 type_specifier_nonarray: T_Uvec3 .

    $default  reduce using rule 94 (type_specifier_nonarray)


state 24

   95 type_specifier_nonarray: T_Uvec4 .

    $default  reduce using rule 95 (type_specifier_nonarray)


state 25

    0 $accept: Program . $end

    $end  shift, and go to state 37


state 26

    1 Program: DeclList .
    2 DeclList: DeclList . declaration

    T_Void     shift, and go to state 1
    T_Bool     shift, and go to state 2
    T_Int      shift, and go to state 3
    T_Float    shift, and go to state 4
    T_Const    shift, and go to state 5
    T_Uniform  shift, and go to state 6
    T_In       shift, and go to state 7
    T_Out      shift, and go to state 8
    T_Mat2     shift, and go to state 9
    T_Mat3     shift, and go to state 10
    T_Mat4     shift, and go to state 11
    T_Vec2     shift, and go to state 12
    T_Vec3     shift, and go to state 13
    T_Vec4     shift, and go to state 14
    T_Ivec2    shift, and go to state 15
    T_Ivec3    shift, and go to state 16
    T_Ivec4    shift, and go to state 17
    T_Bvec2    shift, and go to state 18
    T_Bvec3    shift, and go to state 19
    T_Bvec4    shift, and go to state 20
    T_Uint     shift, and go to state 21
    T_Uvec2    shift, and go to state 22
    T_Uvec3    shift, and go to state 23
    T_Uvec4    shift, and go to state 24

    $default  reduce using rule 1 (Program)

    declaration                      go to state 38
    function_prototype               go to state 28
    function_declarator              go to state 29
    function_header_with_parameters  go to state 30
    function_header                  go to state 31
    single_declaration               go to state 32
    type_qualifier                   go to state 33
    type_specifier                   go to state 34
    type_specifier_nonarray          go to state 35
    function_definition              go to state 36


state 27

    3 DeclList: declaration .

    $default  reduce using rule 3 (DeclList)


state 28

   57 declaration: function_prototype . T_Semicolon
  144 function_definition: function_prototype . compound_statement_no_new_scope

    T_Semicolon  shift, and go to state 39
    T_LeftBrace  shift, and go to state 40

    compound_statement_no_new_scope  go to state 41


state 29

   60 function_prototype: function_declarator . T_RightParen

    T_RightParen  shift, and go to state 42


state 30

   62 function_declarator: function_header_with_parameters .
   64 function_header_with_parameters: function_header_with_parameters . T_Comma parameter_declaration

    T_Comma  shift, and go to state 43

    $default  reduce using rule 62 (function_declarator)


state 31

   61 function_declarator: function_header .
   63 function_header_with_parameters: function_header . parameter_declaration

    T_Void   shift, and go to state 1
    T_Bool   shift, and go to state 2
    T_Int    shift, and go to state 3
    T_Float  shift, and go to state 4
    T_Mat2   shift, and go to state 9
    T_Mat3   shift, and go to state 10
    T_Mat4   shift, and go to state 11
    T_Vec2   shift, and go to state 12
    T_Vec3   shift, and go to state 13
    T_Vec4   shift, and go to state 14
    T_Ivec2  shift, and go to state 15
    T_Ivec3  shift, and go to state 16
    T_Ivec4  shift, and go to state 17
    T_Bvec2  shift, and go to state 18
    T_Bvec3  shift, and go to state 19
    T_Bvec4  shift, and go to state 20
    T_Uint   shift, and go to state 21
    T_Uvec2  shift, and go to state 22
    T_Uvec3  shift, and go to state 23
    T_Uvec4  shift, and go to state 24

    $default  reduce using rule 61 (function_declarator)

    parameter_declaration    go to state 44
    type_specifier           go to state 45
    type_specifier_nonarray  go to state 35


state 32

   59 declaration: single_declaration . T_Semicolon

    T_Semicolon  shift, and go to state 46


state 33

   66 function_header: type_qualifier . type_specifier T_Identifier T_LeftParen
   69 single_declaration: type_qualifier . type_specifier T_Identifier

    T_Void   shift, and go to state 1
    T_Bool   shift, and go to state 2
    T_Int    shift, and go to state 3
    T_Float  shift, and go to state 4
    T_Mat2   shift, and go to state 9
    T_Mat3   shift, and go to state 10
    T_Mat4   shift, and go to state 11
    T_Vec2   shift, and go to state 12
    T_Vec3   shift, and go to state 13
    T_Vec4   shift, and go to state 14
    T_Ivec2  shift, and go to state 15
    T_Ivec3  shift, and go to state 16
    T_Ivec4  shift, and go to state 17
    T_Bvec2  shift, and go to state 18
    T_Bvec3  shift, and go to state 19
    T_Bvec4  shift, and go to state 20
    T_Uint   shift, and go to state 21
    T_Uvec2  shift, and go to state 22
    T_Uvec3  shift, and go to state 23
    T_Uvec4  shift, and go to state 24

    type_specifier           go to state 47
    type_specifier_nonarray  go to state 35


state 34

   65 function_header: type_specifier . T_Identifier T_LeftParen
   68 single_declaration: type_specifier . T_Identifier
   70                   | type_specifier . T_Identifier array_specifier
   71                   | type_specifier . T_Identifier T_Equal assignment_expression

    T_Identifier  shift, and go to state 48


state 35

   76 type_specifier: type_specifier_nonarray .
   77               | type_specifier_nonarray . array_specifier

    T_LeftBracket  shift, and go to state 49

    $default  reduce using rule 76 (type_specifier)

    array_specifier  go to state 50


state 36

   58 declaration: function_definition .

    $default  reduce using rule 58 (declaration)


state 37

    0 $accept: Program $end .

    $default  accept


state 38

    2 DeclList: DeclList declaration .

    $default  reduce using rule 2 (DeclList)


state 39

   57 declaration: function_prototype T_Semicolon .

    $default  reduce using rule 57 (declaration)


state 40

  115 compound_statement_no_new_scope: T_LeftBrace . T_RightBrace
  116                                | T_LeftBrace . statement_list T_RightBrace
  117                                | T_LeftBrace . var_decl_list T_RightBrace
  118                                | T_LeftBrace . var_decl_list statement_list T_RightBrace

    T_Void           shift, and go to state 1
    T_Bool           shift, and go to state 2
    T_Int            shift, and go to state 3
    T_Float          shift, and go to state 4
    T_While          shift, and go to state 51
    T_For            shift, and go to state 52
    T_If             shift, and go to state 53
    T_Return         shift, and go to state 54
    T_Break          shift, and go to state 55
    T_Const          shift, and go to state 5
    T_Uniform        shift, and go to state 6
    T_Do             shift, and go to state 56
    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Switch         shift, and go to state 59
    T_Case           shift, and go to state 60
    T_Default        shift, and go to state 61
    T_In             shift, and go to state 7
    T_Out            shift, and go to state 8
    T_Mat2           shift, and go to state 9
    T_Mat3           shift, and go to state 10
    T_Mat4           shift, and go to state 11
    T_Vec2           shift, and go to state 12
    T_Vec3           shift, and go to state 13
    T_Vec4           shift, and go to state 14
    T_Ivec2          shift, and go to state 15
    T_Ivec3          shift, and go to state 16
    T_Ivec4          shift, and go to state 17
    T_Bvec2          shift, and go to state 18
    T_Bvec3          shift, and go to state 19
    T_Bvec4          shift, and go to state 20
    T_Uint           shift, and go to state 21
    T_Uvec2          shift, and go to state 22
    T_Uvec3          shift, and go to state 23
    T_Uvec4          shift, and go to state 24
    T_Semicolon      shift, and go to state 62
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_LeftBrace      shift, and go to state 66
    T_RightBrace     shift, and go to state 67
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 88
    single_declaration                    go to state 89
    type_qualifier                        go to state 90
    type_specifier                        go to state 91
    type_specifier_nonarray               go to state 35
    declaration_statement                 go to state 92
    statement                             go to state 93
    simple_statement                      go to state 94
    compound_statement_with_scope         go to state 95
    var_decl_list                         go to state 96
    statement_list                        go to state 97
    expression_statement                  go to state 98
    selection_statement                   go to state 99
    switch_statement                      go to state 100
    case_label                            go to state 101
    iteration_statement                   go to state 102
    jump_statement                        go to state 103


state 41

  144 function_definition: function_prototype compound_statement_no_new_scope .

    $default  reduce using rule 144 (function_definition)


state 42

   60 function_prototype: function_declarator T_RightParen .

    $default  reduce using rule 60 (function_prototype)


state 43

   64 function_header_with_parameters: function_header_with_parameters T_Comma . parameter_declaration

    T_Void   shift, and go to state 1
    T_Bool   shift, and go to state 2
    T_Int    shift, and go to state 3
    T_Float  shift, and go to state 4
    T_Mat2   shift, and go to state 9
    T_Mat3   shift, and go to state 10
    T_Mat4   shift, and go to state 11
    T_Vec2   shift, and go to state 12
    T_Vec3   shift, and go to state 13
    T_Vec4   shift, and go to state 14
    T_Ivec2  shift, and go to state 15
    T_Ivec3  shift, and go to state 16
    T_Ivec4  shift, and go to state 17
    T_Bvec2  shift, and go to state 18
    T_Bvec3  shift, and go to state 19
    T_Bvec4  shift, and go to state 20
    T_Uint   shift, and go to state 21
    T_Uvec2  shift, and go to state 22
    T_Uvec3  shift, and go to state 23
    T_Uvec4  shift, and go to state 24

    parameter_declaration    go to state 104
    type_specifier           go to state 45
    type_specifier_nonarray  go to state 35


state 44

   63 function_header_with_parameters: function_header parameter_declaration .

    $default  reduce using rule 63 (function_header_with_parameters)


state 45

   67 parameter_declaration: type_specifier . T_Identifier

    T_Identifier  shift, and go to state 105


state 46

   59 declaration: single_declaration T_Semicolon .

    $default  reduce using rule 59 (declaration)


state 47

   66 function_header: type_qualifier type_specifier . T_Identifier T_LeftParen
   69 single_declaration: type_qualifier type_specifier . T_Identifier

    T_Identifier  shift, and go to state 106


state 48

   65 function_header: type_specifier T_Identifier . T_LeftParen
   68 single_declaration: type_specifier T_Identifier .
   70                   | type_specifier T_Identifier . array_specifier
   71                   | type_specifier T_Identifier . T_Equal assignment_expression

    T_Equal        shift, and go to state 107
    T_LeftParen    shift, and go to state 108
    T_LeftBracket  shift, and go to state 49

    $default  reduce using rule 68 (single_declaration)

    array_specifier  go to state 109


state 49

   78 array_specifier: T_LeftBracket . conditional_expression T_RightBracket

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 110
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 111


state 50

   77 type_specifier: type_specifier_nonarray array_specifier .

    $default  reduce using rule 77 (type_specifier)


state 51

  133 iteration_statement: T_While . T_LeftParen condition T_RightParen statement_no_new_scope

    T_LeftParen  shift, and go to state 112


state 52

  135 iteration_statement: T_For . T_LeftParen for_init_statement for_rest_statement T_RightParen statement_no_new_scope

    T_LeftParen  shift, and go to state 113


state 53

  125 selection_statement: T_If . T_LeftParen assignment_expression T_RightParen statement_with_scope
  126                    | T_If . T_LeftParen assignment_expression T_RightParen statement_with_scope T_Else statement_with_scope

    T_LeftParen  shift, and go to state 114


state 54

  142 jump_statement: T_Return . T_Semicolon
  143               | T_Return . assignment_expression T_Semicolon

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Semicolon      shift, and go to state 115
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 116


state 55

  141 jump_statement: T_Break . T_Semicolon

    T_Semicolon  shift, and go to state 117


state 56

  134 iteration_statement: T_Do . statement_with_scope T_While T_LeftParen assignment_expression T_RightParen T_Semicolon

    T_While          shift, and go to state 51
    T_For            shift, and go to state 52
    T_If             shift, and go to state 53
    T_Return         shift, and go to state 54
    T_Break          shift, and go to state 55
    T_Do             shift, and go to state 56
    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Switch         shift, and go to state 59
    T_Case           shift, and go to state 60
    T_Default        shift, and go to state 61
    T_Semicolon      shift, and go to state 62
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_LeftBrace      shift, and go to state 40
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 88
    declaration_statement                 go to state 92
    statement_with_scope                  go to state 118
    simple_statement                      go to state 119
    compound_statement_no_new_scope       go to state 120
    expression_statement                  go to state 98
    selection_statement                   go to state 99
    switch_statement                      go to state 100
    case_label                            go to state 101
    iteration_statement                   go to state 102
    jump_statement                        go to state 103


state 57

   25 unary_expression: T_Inc . unary_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 121
    unary_operator                        go to state 80


state 58

   26 unary_expression: T_Dec . unary_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 122
    unary_operator                        go to state 80


state 59

  130 switch_statement: T_Switch . T_LeftParen assignment_expression T_RightParen T_LeftBrace statement_list T_RightBrace

    T_LeftParen  shift, and go to state 123


state 60

  131 case_label: T_Case . assignment_expression T_Colon

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 124


state 61

  132 case_label: T_Default . T_Colon

    T_Colon  shift, and go to state 125


state 62

  123 expression_statement: T_Semicolon .

    $default  reduce using rule 123 (expression_statement)


state 63

   29 unary_operator: T_Dash .

    $default  reduce using rule 29 (unary_operator)


state 64

   28 unary_operator: T_Plus .

    $default  reduce using rule 28 (unary_operator)


state 65

    8 primary_expression: T_LeftParen . assignment_expression T_RightParen

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 126


state 66

  113 compound_statement_with_scope: T_LeftBrace . T_RightBrace
  114                              | T_LeftBrace . statement_list T_RightBrace

    T_While          shift, and go to state 51
    T_For            shift, and go to state 52
    T_If             shift, and go to state 53
    T_Return         shift, and go to state 54
    T_Break          shift, and go to state 55
    T_Do             shift, and go to state 56
    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Switch         shift, and go to state 59
    T_Case           shift, and go to state 60
    T_Default        shift, and go to state 61
    T_Semicolon      shift, and go to state 62
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_LeftBrace      shift, and go to state 66
    T_RightBrace     shift, and go to state 127
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 88
    declaration_statement                 go to state 92
    statement                             go to state 93
    simple_statement                      go to state 94
    compound_statement_with_scope         go to state 95
    statement_list                        go to state 128
    expression_statement                  go to state 98
    selection_statement                   go to state 99
    switch_statement                      go to state 100
    case_label                            go to state 101
    iteration_statement                   go to state 102
    jump_statement                        go to state 103


state 67

  115 compound_statement_no_new_scope: T_LeftBrace T_RightBrace .

    $default  reduce using rule 115 (compound_statement_no_new_scope)


state 68

    4 primary_expression: T_Identifier .

    $default  reduce using rule 4 (primary_expression)


state 69

    5 primary_expression: T_IntConstant .

    $default  reduce using rule 5 (primary_expression)


state 70

    6 primary_expression: T_FloatConstant .

    $default  reduce using rule 6 (primary_expression)


state 71

    7 primary_expression: T_BoolConstant .

    $default  reduce using rule 7 (primary_expression)


state 72

    9 postfix_expression: primary_expression .

    $default  reduce using rule 9 (postfix_expression)


state 73

   10 postfix_expression: postfix_expression . T_LeftBracket assignment_expression T_RightBracket
   12                   | postfix_expression .
   13                   | postfix_expression . T_Dot T_Identifier
   14                   | postfix_expression . T_Inc
   15                   | postfix_expression . T_Dec
   24 unary_expression: postfix_expression .

    T_Inc          shift, and go to state 129
    T_Dec          shift, and go to state 130
    T_Dot          shift, and go to state 131
    T_LeftBracket  shift, and go to state 132

    T_Void           reduce using rule 12 (postfix_expression)
    T_Void           [reduce using rule 24 (unary_expression)]
    T_Bool           reduce using rule 12 (postfix_expression)
    T_Bool           [reduce using rule 24 (unary_expression)]
    T_Int            reduce using rule 12 (postfix_expression)
    T_Int            [reduce using rule 24 (unary_expression)]
    T_Float          reduce using rule 12 (postfix_expression)
    T_Float          [reduce using rule 24 (unary_expression)]
    T_LessEqual      reduce using rule 12 (postfix_expression)
    T_LessEqual      [reduce using rule 24 (unary_expression)]
    T_GreaterEqual   reduce using rule 12 (postfix_expression)
    T_GreaterEqual   [reduce using rule 24 (unary_expression)]
    T_EQ             reduce using rule 12 (postfix_expression)
    T_EQ             [reduce using rule 24 (unary_expression)]
    T_NE             reduce using rule 12 (postfix_expression)
    T_NE             [reduce using rule 24 (unary_expression)]
    T_LeftAngle      reduce using rule 12 (postfix_expression)
    T_LeftAngle      [reduce using rule 24 (unary_expression)]
    T_RightAngle     reduce using rule 12 (postfix_expression)
    T_RightAngle     [reduce using rule 24 (unary_expression)]
    T_And            reduce using rule 12 (postfix_expression)
    T_And            [reduce using rule 24 (unary_expression)]
    T_Or             reduce using rule 12 (postfix_expression)
    T_Or             [reduce using rule 24 (unary_expression)]
    T_Equal          reduce using rule 12 (postfix_expression)
    T_Equal          [reduce using rule 24 (unary_expression)]
    T_MulAssign      reduce using rule 12 (postfix_expression)
    T_MulAssign      [reduce using rule 24 (unary_expression)]
    T_DivAssign      reduce using rule 12 (postfix_expression)
    T_DivAssign      [reduce using rule 24 (unary_expression)]
    T_AddAssign      reduce using rule 12 (postfix_expression)
    T_AddAssign      [reduce using rule 24 (unary_expression)]
    T_SubAssign      reduce using rule 12 (postfix_expression)
    T_SubAssign      [reduce using rule 24 (unary_expression)]
    T_While          reduce using rule 12 (postfix_expression)
    T_While          [reduce using rule 24 (unary_expression)]
    T_For            reduce using rule 12 (postfix_expression)
    T_For            [reduce using rule 24 (unary_expression)]
    T_If             reduce using rule 12 (postfix_expression)
    T_If             [reduce using rule 24 (unary_expression)]
    T_Else           reduce using rule 12 (postfix_expression)
    T_Else           [reduce using rule 24 (unary_expression)]
    T_Return         reduce using rule 12 (postfix_expression)
    T_Return         [reduce using rule 24 (unary_expression)]
    T_Break          reduce using rule 12 (postfix_expression)
    T_Break          [reduce using rule 24 (unary_expression)]
    T_Const          reduce using rule 12 (postfix_expression)
    T_Const          [reduce using rule 24 (unary_expression)]
    T_Uniform        reduce using rule 12 (postfix_expression)
    T_Uniform        [reduce using rule 24 (unary_expression)]
    T_Do             reduce using rule 12 (postfix_expression)
    T_Do             [reduce using rule 24 (unary_expression)]
    T_Inc            [reduce using rule 12 (postfix_expression)]
    T_Inc            [reduce using rule 24 (unary_expression)]
    T_Dec            [reduce using rule 12 (postfix_expression)]
    T_Dec            [reduce using rule 24 (unary_expression)]
    T_Switch         reduce using rule 12 (postfix_expression)
    T_Switch         [reduce using rule 24 (unary_expression)]
    T_Case           reduce using rule 12 (postfix_expression)
    T_Case           [reduce using rule 24 (unary_expression)]
    T_Default        reduce using rule 12 (postfix_expression)
    T_Default        [reduce using rule 24 (unary_expression)]
    T_In             reduce using rule 12 (postfix_expression)
    T_In             [reduce using rule 24 (unary_expression)]
    T_Out            reduce using rule 12 (postfix_expression)
    T_Out            [reduce using rule 24 (unary_expression)]
    T_Mat2           reduce using rule 12 (postfix_expression)
    T_Mat2           [reduce using rule 24 (unary_expression)]
    T_Mat3           reduce using rule 12 (postfix_expression)
    T_Mat3           [reduce using rule 24 (unary_expression)]
    T_Mat4           reduce using rule 12 (postfix_expression)
    T_Mat4           [reduce using rule 24 (unary_expression)]
    T_Vec2           reduce using rule 12 (postfix_expression)
    T_Vec2           [reduce using rule 24 (unary_expression)]
    T_Vec3           reduce using rule 12 (postfix_expression)
    T_Vec3           [reduce using rule 24 (unary_expression)]
    T_Vec4           reduce using rule 12 (postfix_expression)
    T_Vec4           [reduce using rule 24 (unary_expression)]
    T_Ivec2          reduce using rule 12 (postfix_expression)
    T_Ivec2          [reduce using rule 24 (unary_expression)]
    T_Ivec3          reduce using rule 12 (postfix_expression)
    T_Ivec3          [reduce using rule 24 (unary_expression)]
    T_Ivec4          reduce using rule 12 (postfix_expression)
    T_Ivec4          [reduce using rule 24 (unary_expression)]
    T_Bvec2          reduce using rule 12 (postfix_expression)
    T_Bvec2          [reduce using rule 24 (unary_expression)]
    T_Bvec3          reduce using rule 12 (postfix_expression)
    T_Bvec3          [reduce using rule 24 (unary_expression)]
    T_Bvec4          reduce using rule 12 (postfix_expression)
    T_Bvec4          [reduce using rule 24 (unary_expression)]
    T_Uint           reduce using rule 12 (postfix_expression)
    T_Uint           [reduce using rule 24 (unary_expression)]
    T_Uvec2          reduce using rule 12 (postfix_expression)
    T_Uvec2          [reduce using rule 24 (unary_expression)]
    T_Uvec3          reduce using rule 12 (postfix_expression)
    T_Uvec3          [reduce using rule 24 (unary_expression)]
    T_Uvec4          reduce using rule 12 (postfix_expression)
    T_Uvec4          [reduce using rule 24 (unary_expression)]
    T_Semicolon      reduce using rule 12 (postfix_expression)
    T_Semicolon      [reduce using rule 24 (unary_expression)]
    T_Dot            [reduce using rule 12 (postfix_expression)]
    T_Colon          reduce using rule 12 (postfix_expression)
    T_Colon          [reduce using rule 24 (unary_expression)]
    T_Question       reduce using rule 12 (postfix_expression)
    T_Question       [reduce using rule 24 (unary_expression)]
    T_Comma          reduce using rule 12 (postfix_expression)
    T_Comma          [reduce using rule 24 (unary_expression)]
    T_Dash           reduce using rule 12 (postfix_expression)
    T_Dash           [reduce using rule 24 (unary_expression)]
    T_Plus           reduce using rule 12 (postfix_expression)
    T_Plus           [reduce using rule 24 (unary_expression)]
    T_Star           reduce using rule 12 (postfix_expression)
    T_Star           [reduce using rule 24 (unary_expression)]
    T_Slash          reduce using rule 12 (postfix_expression)
    T_Slash          [reduce using rule 24 (unary_expression)]
    T_LeftParen      reduce using rule 12 (postfix_expression)
    T_LeftParen      [reduce using rule 24 (unary_expression)]
    T_RightParen     reduce using rule 12 (postfix_expression)
    T_RightParen     [reduce using rule 24 (unary_expression)]
    T_LeftBracket    [reduce using rule 12 (postfix_expression)]
    T_RightBracket   reduce using rule 12 (postfix_expression)
    T_RightBracket   [reduce using rule 24 (unary_expression)]
    T_LeftBrace      reduce using rule 12 (postfix_expression)
    T_LeftBrace      [reduce using rule 24 (unary_expression)]
    T_RightBrace     reduce using rule 12 (postfix_expression)
    T_RightBrace     [reduce using rule 24 (unary_expression)]
    T_Identifier     reduce using rule 12 (postfix_expression)
    T_Identifier     [reduce using rule 24 (unary_expression)]
    T_IntConstant    reduce using rule 12 (postfix_expression)
    T_IntConstant    [reduce using rule 24 (unary_expression)]
    T_FloatConstant  reduce using rule 12 (postfix_expression)
    T_FloatConstant  [reduce using rule 24 (unary_expression)]
    T_BoolConstant   reduce using rule 12 (postfix_expression)
    T_BoolConstant   [reduce using rule 24 (unary_expression)]
    $default         reduce using rule 12 (postfix_expression)


state 74

   11 postfix_expression: function_call_generic .

    $default  reduce using rule 11 (postfix_expression)


state 75

   17 function_call_generic: function_call_header_no_parameters . T_RightParen

    T_RightParen  shift, and go to state 133


state 76

   16 function_call_generic: function_call_header_with_parameters . T_RightParen
   21 function_call_header_with_parameters: function_call_header_with_parameters . T_Comma assignment_expression

    T_Comma       shift, and go to state 134
    T_RightParen  shift, and go to state 135


state 77

   18 function_call_header_no_parameters: function_call_header . T_Void
   19                                   | function_call_header .
   20 function_call_header_with_parameters: function_call_header . assignment_expression

    T_Void           shift, and go to state 136
    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]
    $default     reduce using rule 19 (function_call_header_no_parameters)

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 137


state 78

   22 function_call_header: function_identifier . T_LeftParen

    T_LeftParen  shift, and go to state 138


state 79

   30 multiplicative_expression: unary_expression .
   51 assignment_expression: unary_expression . assignment_operator assignment_expression

    T_Equal      shift, and go to state 139
    T_MulAssign  shift, and go to state 140
    T_DivAssign  shift, and go to state 141
    T_AddAssign  shift, and go to state 142
    T_SubAssign  shift, and go to state 143

    $default  reduce using rule 30 (multiplicative_expression)

    assignment_operator  go to state 144


state 80

   27 unary_expression: unary_operator . unary_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 145
    unary_operator                        go to state 80


state 81

   31 multiplicative_expression: multiplicative_expression . T_Star unary_expression
   32                          | multiplicative_expression . T_Slash unary_expression
   33 additive_expression: multiplicative_expression .

    T_Star   shift, and go to state 146
    T_Slash  shift, and go to state 147

    $default  reduce using rule 33 (additive_expression)


state 82

   34 additive_expression: additive_expression . T_Plus multiplicative_expression
   35                    | additive_expression . T_Dash multiplicative_expression
   36 relational_expression: additive_expression .

    T_Dash  shift, and go to state 148
    T_Plus  shift, and go to state 149

    T_Dash    [reduce using rule 36 (relational_expression)]
    T_Plus    [reduce using rule 36 (relational_expression)]
    $default  reduce using rule 36 (relational_expression)


state 83

   37 relational_expression: relational_expression . T_LeftAngle additive_expression
   38                      | relational_expression . T_RightAngle additive_expression
   39                      | relational_expression . T_LessEqual additive_expression
   40                      | relational_expression . T_GreaterEqual additive_expression
   41 equality_expression: relational_expression .

    T_LessEqual     shift, and go to state 150
    T_GreaterEqual  shift, and go to state 151
    T_LeftAngle     shift, and go to state 152
    T_RightAngle    shift, and go to state 153

    $default  reduce using rule 41 (equality_expression)


state 84

   42 equality_expression: equality_expression . T_EQ relational_expression
   43                    | equality_expression . T_NE relational_expression
   44 logical_and_expression: equality_expression .

    T_EQ  shift, and go to state 154
    T_NE  shift, and go to state 155

    $default  reduce using rule 44 (logical_and_expression)


state 85

   45 logical_and_expression: logical_and_expression . T_And equality_expression
   46 logical_or_expression: logical_and_expression .

    T_And  shift, and go to state 156

    $default  reduce using rule 46 (logical_or_expression)


state 86

   47 logical_or_expression: logical_or_expression . T_Or logical_and_expression
   48 conditional_expression: logical_or_expression .
   49                       | logical_or_expression . T_Question assignment_expression T_Colon assignment_expression

    T_Or        shift, and go to state 157
    T_Question  shift, and go to state 158

    $default  reduce using rule 48 (conditional_expression)


state 87

   50 assignment_expression: conditional_expression .

    $default  reduce using rule 50 (assignment_expression)


state 88

   99 declaration_statement: assignment_expression .
  124 expression_statement: assignment_expression . T_Semicolon

    T_Semicolon  shift, and go to state 159

    T_Semicolon  [reduce using rule 99 (declaration_statement)]
    $default     reduce using rule 99 (declaration_statement)


state 89

  119 var_decl_list: single_declaration .

    $default  reduce using rule 119 (var_decl_list)


state 90

   69 single_declaration: type_qualifier . type_specifier T_Identifier

    T_Void   shift, and go to state 1
    T_Bool   shift, and go to state 2
    T_Int    shift, and go to state 3
    T_Float  shift, and go to state 4
    T_Mat2   shift, and go to state 9
    T_Mat3   shift, and go to state 10
    T_Mat4   shift, and go to state 11
    T_Vec2   shift, and go to state 12
    T_Vec3   shift, and go to state 13
    T_Vec4   shift, and go to state 14
    T_Ivec2  shift, and go to state 15
    T_Ivec3  shift, and go to state 16
    T_Ivec4  shift, and go to state 17
    T_Bvec2  shift, and go to state 18
    T_Bvec3  shift, and go to state 19
    T_Bvec4  shift, and go to state 20
    T_Uint   shift, and go to state 21
    T_Uvec2  shift, and go to state 22
    T_Uvec3  shift, and go to state 23
    T_Uvec4  shift, and go to state 24

    type_specifier           go to state 160
    type_specifier_nonarray  go to state 35


state 91

   68 single_declaration: type_specifier . T_Identifier
   70                   | type_specifier . T_Identifier array_specifier
   71                   | type_specifier . T_Identifier T_Equal assignment_expression

    T_Identifier  shift, and go to state 161


state 92

  106 simple_statement: declaration_statement .

    $default  reduce using rule 106 (simple_statement)


state 93

  121 statement_list: statement .

    $default  reduce using rule 121 (statement_list)


state 94

  101 statement: simple_statement .

    $default  reduce using rule 101 (statement)


state 95

  100 statement: compound_statement_with_scope .

    $default  reduce using rule 100 (statement)


state 96

  117 compound_statement_no_new_scope: T_LeftBrace var_decl_list . T_RightBrace
  118                                | T_LeftBrace var_decl_list . statement_list T_RightBrace
  120 var_decl_list: var_decl_list . single_declaration

    T_Void           shift, and go to state 1
    T_Bool           shift, and go to state 2
    T_Int            shift, and go to state 3
    T_Float          shift, and go to state 4
    T_While          shift, and go to state 51
    T_For            shift, and go to state 52
    T_If             shift, and go to state 53
    T_Return         shift, and go to state 54
    T_Break          shift, and go to state 55
    T_Const          shift, and go to state 5
    T_Uniform        shift, and go to state 6
    T_Do             shift, and go to state 56
    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Switch         shift, and go to state 59
    T_Case           shift, and go to state 60
    T_Default        shift, and go to state 61
    T_In             shift, and go to state 7
    T_Out            shift, and go to state 8
    T_Mat2           shift, and go to state 9
    T_Mat3           shift, and go to state 10
    T_Mat4           shift, and go to state 11
    T_Vec2           shift, and go to state 12
    T_Vec3           shift, and go to state 13
    T_Vec4           shift, and go to state 14
    T_Ivec2          shift, and go to state 15
    T_Ivec3          shift, and go to state 16
    T_Ivec4          shift, and go to state 17
    T_Bvec2          shift, and go to state 18
    T_Bvec3          shift, and go to state 19
    T_Bvec4          shift, and go to state 20
    T_Uint           shift, and go to state 21
    T_Uvec2          shift, and go to state 22
    T_Uvec3          shift, and go to state 23
    T_Uvec4          shift, and go to state 24
    T_Semicolon      shift, and go to state 62
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_LeftBrace      shift, and go to state 66
    T_RightBrace     shift, and go to state 162
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 88
    single_declaration                    go to state 163
    type_qualifier                        go to state 90
    type_specifier                        go to state 91
    type_specifier_nonarray               go to state 35
    declaration_statement                 go to state 92
    statement                             go to state 93
    simple_statement                      go to state 94
    compound_statement_with_scope         go to state 95
    statement_list                        go to state 164
    expression_statement                  go to state 98
    selection_statement                   go to state 99
    switch_statement                      go to state 100
    case_label                            go to state 101
    iteration_statement                   go to state 102
    jump_statement                        go to state 103


state 97

  116 compound_statement_no_new_scope: T_LeftBrace statement_list . T_RightBrace
  122 statement_list: statement_list . statement

    T_While          shift, and go to state 51
    T_For            shift, and go to state 52
    T_If             shift, and go to state 53
    T_Return         shift, and go to state 54
    T_Break          shift, and go to state 55
    T_Do             shift, and go to state 56
    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Switch         shift, and go to state 59
    T_Case           shift, and go to state 60
    T_Default        shift, and go to state 61
    T_Semicolon      shift, and go to state 62
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_LeftBrace      shift, and go to state 66
    T_RightBrace     shift, and go to state 165
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 88
    declaration_statement                 go to state 92
    statement                             go to state 166
    simple_statement                      go to state 94
    compound_statement_with_scope         go to state 95
    expression_statement                  go to state 98
    selection_statement                   go to state 99
    switch_statement                      go to state 100
    case_label                            go to state 101
    iteration_statement                   go to state 102
    jump_statement                        go to state 103


state 98

  107 simple_statement: expression_statement .

    $default  reduce using rule 107 (simple_statement)


state 99

  108 simple_statement: selection_statement .

    $default  reduce using rule 108 (simple_statement)


state 100

  109 simple_statement: switch_statement .

    $default  reduce using rule 109 (simple_statement)


state 101

  110 simple_statement: case_label .

    $default  reduce using rule 110 (simple_statement)


state 102

  111 simple_statement: iteration_statement .

    $default  reduce using rule 111 (simple_statement)


state 103

  112 simple_statement: jump_statement .

    $default  reduce using rule 112 (simple_statement)


state 104

   64 function_header_with_parameters: function_header_with_parameters T_Comma parameter_declaration .

    $default  reduce using rule 64 (function_header_with_parameters)


state 105

   67 parameter_declaration: type_specifier T_Identifier .

    $default  reduce using rule 67 (parameter_declaration)


state 106

   66 function_header: type_qualifier type_specifier T_Identifier . T_LeftParen
   69 single_declaration: type_qualifier type_specifier T_Identifier .

    T_LeftParen  shift, and go to state 167

    $default  reduce using rule 69 (single_declaration)


state 107

   71 single_declaration: type_specifier T_Identifier T_Equal . assignment_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 168


state 108

   65 function_header: type_specifier T_Identifier T_LeftParen .

    $default  reduce using rule 65 (function_header)


state 109

   70 single_declaration: type_specifier T_Identifier array_specifier .

    $default  reduce using rule 70 (single_declaration)


state 110

   30 multiplicative_expression: unary_expression .

    $default  reduce using rule 30 (multiplicative_expression)


state 111

   78 array_specifier: T_LeftBracket conditional_expression . T_RightBracket

    T_RightBracket  shift, and go to state 169


state 112

  133 iteration_statement: T_While T_LeftParen . condition T_RightParen statement_no_new_scope

    T_Void           shift, and go to state 1
    T_Bool           shift, and go to state 2
    T_Int            shift, and go to state 3
    T_Float          shift, and go to state 4
    T_Const          shift, and go to state 5
    T_Uniform        shift, and go to state 6
    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_In             shift, and go to state 7
    T_Out            shift, and go to state 8
    T_Mat2           shift, and go to state 9
    T_Mat3           shift, and go to state 10
    T_Mat4           shift, and go to state 11
    T_Vec2           shift, and go to state 12
    T_Vec3           shift, and go to state 13
    T_Vec4           shift, and go to state 14
    T_Ivec2          shift, and go to state 15
    T_Ivec3          shift, and go to state 16
    T_Ivec4          shift, and go to state 17
    T_Bvec2          shift, and go to state 18
    T_Bvec3          shift, and go to state 19
    T_Bvec4          shift, and go to state 20
    T_Uint           shift, and go to state 21
    T_Uvec2          shift, and go to state 22
    T_Uvec3          shift, and go to state 23
    T_Uvec4          shift, and go to state 24
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 170
    type_qualifier                        go to state 171
    type_specifier                        go to state 172
    type_specifier_nonarray               go to state 35
    condition                             go to state 173


state 113

  135 iteration_statement: T_For T_LeftParen . for_init_statement for_rest_statement T_RightParen statement_no_new_scope

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Semicolon      shift, and go to state 62
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 88
    declaration_statement                 go to state 174
    expression_statement                  go to state 175
    for_init_statement                    go to state 176


state 114

  125 selection_statement: T_If T_LeftParen . assignment_expression T_RightParen statement_with_scope
  126                    | T_If T_LeftParen . assignment_expression T_RightParen statement_with_scope T_Else statement_with_scope

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 177


state 115

  142 jump_statement: T_Return T_Semicolon .

    $default  reduce using rule 142 (jump_statement)


state 116

  143 jump_statement: T_Return assignment_expression . T_Semicolon

    T_Semicolon  shift, and go to state 178


state 117

  141 jump_statement: T_Break T_Semicolon .

    $default  reduce using rule 141 (jump_statement)


state 118

  134 iteration_statement: T_Do statement_with_scope . T_While T_LeftParen assignment_expression T_RightParen T_Semicolon

    T_While  shift, and go to state 179


state 119

  105 statement_with_scope: simple_statement .

    $default  reduce using rule 105 (statement_with_scope)


state 120

  104 statement_with_scope: compound_statement_no_new_scope .

    $default  reduce using rule 104 (statement_with_scope)


state 121

   25 unary_expression: T_Inc unary_expression .

    $default  reduce using rule 25 (unary_expression)


state 122

   26 unary_expression: T_Dec unary_expression .

    $default  reduce using rule 26 (unary_expression)


state 123

  130 switch_statement: T_Switch T_LeftParen . assignment_expression T_RightParen T_LeftBrace statement_list T_RightBrace

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 180


state 124

  131 case_label: T_Case assignment_expression . T_Colon

    T_Colon  shift, and go to state 181


state 125

  132 case_label: T_Default T_Colon .

    $default  reduce using rule 132 (case_label)


state 126

    8 primary_expression: T_LeftParen assignment_expression . T_RightParen

    T_RightParen  shift, and go to state 182


state 127

  113 compound_statement_with_scope: T_LeftBrace T_RightBrace .

    $default  reduce using rule 113 (compound_statement_with_scope)


state 128

  114 compound_statement_with_scope: T_LeftBrace statement_list . T_RightBrace
  122 statement_list: statement_list . statement

    T_While          shift, and go to state 51
    T_For            shift, and go to state 52
    T_If             shift, and go to state 53
    T_Return         shift, and go to state 54
    T_Break          shift, and go to state 55
    T_Do             shift, and go to state 56
    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Switch         shift, and go to state 59
    T_Case           shift, and go to state 60
    T_Default        shift, and go to state 61
    T_Semicolon      shift, and go to state 62
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_LeftBrace      shift, and go to state 66
    T_RightBrace     shift, and go to state 183
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 88
    declaration_statement                 go to state 92
    statement                             go to state 166
    simple_statement                      go to state 94
    compound_statement_with_scope         go to state 95
    expression_statement                  go to state 98
    selection_statement                   go to state 99
    switch_statement                      go to state 100
    case_label                            go to state 101
    iteration_statement                   go to state 102
    jump_statement                        go to state 103


state 129

   14 postfix_expression: postfix_expression T_Inc .

    $default  reduce using rule 14 (postfix_expression)


state 130

   15 postfix_expression: postfix_expression T_Dec .

    $default  reduce using rule 15 (postfix_expression)


state 131

   13 postfix_expression: postfix_expression T_Dot . T_Identifier

    T_Identifier  shift, and go to state 184


state 132

   10 postfix_expression: postfix_expression T_LeftBracket . assignment_expression T_RightBracket

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 185


state 133

   17 function_call_generic: function_call_header_no_parameters T_RightParen .

    $default  reduce using rule 17 (function_call_generic)


state 134

   21 function_call_header_with_parameters: function_call_header_with_parameters T_Comma . assignment_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 186


state 135

   16 function_call_generic: function_call_header_with_parameters T_RightParen .

    $default  reduce using rule 16 (function_call_generic)


state 136

   18 function_call_header_no_parameters: function_call_header T_Void .

    $default  reduce using rule 18 (function_call_header_no_parameters)


state 137

   20 function_call_header_with_parameters: function_call_header assignment_expression .

    $default  reduce using rule 20 (function_call_header_with_parameters)


state 138

   22 function_call_header: function_identifier T_LeftParen .

    $default  reduce using rule 22 (function_call_header)


state 139

   52 assignment_operator: T_Equal .

    $default  reduce using rule 52 (assignment_operator)


state 140

   53 assignment_operator: T_MulAssign .

    $default  reduce using rule 53 (assignment_operator)


state 141

   54 assignment_operator: T_DivAssign .

    $default  reduce using rule 54 (assignment_operator)


state 142

   55 assignment_operator: T_AddAssign .

    $default  reduce using rule 55 (assignment_operator)


state 143

   56 assignment_operator: T_SubAssign .

    $default  reduce using rule 56 (assignment_operator)


state 144

   51 assignment_expression: unary_expression assignment_operator . assignment_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 187


state 145

   27 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 27 (unary_expression)


state 146

   31 multiplicative_expression: multiplicative_expression T_Star . unary_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 188
    unary_operator                        go to state 80


state 147

   32 multiplicative_expression: multiplicative_expression T_Slash . unary_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 189
    unary_operator                        go to state 80


state 148

   35 additive_expression: additive_expression T_Dash . multiplicative_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 110
    unary_operator                        go to state 80
    multiplicative_expression             go to state 190


state 149

   34 additive_expression: additive_expression T_Plus . multiplicative_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 110
    unary_operator                        go to state 80
    multiplicative_expression             go to state 191


state 150

   39 relational_expression: relational_expression T_LessEqual . additive_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 110
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 192


state 151

   40 relational_expression: relational_expression T_GreaterEqual . additive_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 110
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 193


state 152

   37 relational_expression: relational_expression T_LeftAngle . additive_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 110
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 194


state 153

   38 relational_expression: relational_expression T_RightAngle . additive_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 110
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 195


state 154

   42 equality_expression: equality_expression T_EQ . relational_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 110
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 196


state 155

   43 equality_expression: equality_expression T_NE . relational_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 110
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 197


state 156

   45 logical_and_expression: logical_and_expression T_And . equality_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 110
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 198


state 157

   47 logical_or_expression: logical_or_expression T_Or . logical_and_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 110
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 199


state 158

   49 conditional_expression: logical_or_expression T_Question . assignment_expression T_Colon assignment_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 200


state 159

  124 expression_statement: assignment_expression T_Semicolon .

    $default  reduce using rule 124 (expression_statement)


state 160

   69 single_declaration: type_qualifier type_specifier . T_Identifier

    T_Identifier  shift, and go to state 201


state 161

   68 single_declaration: type_specifier T_Identifier .
   70                   | type_specifier T_Identifier . array_specifier
   71                   | type_specifier T_Identifier . T_Equal assignment_expression

    T_Equal        shift, and go to state 107
    T_LeftBracket  shift, and go to state 49

    $default  reduce using rule 68 (single_declaration)

    array_specifier  go to state 109


state 162

  117 compound_statement_no_new_scope: T_LeftBrace var_decl_list T_RightBrace .

    $default  reduce using rule 117 (compound_statement_no_new_scope)


state 163

  120 var_decl_list: var_decl_list single_declaration .

    $default  reduce using rule 120 (var_decl_list)


state 164

  118 compound_statement_no_new_scope: T_LeftBrace var_decl_list statement_list . T_RightBrace
  122 statement_list: statement_list . statement

    T_While          shift, and go to state 51
    T_For            shift, and go to state 52
    T_If             shift, and go to state 53
    T_Return         shift, and go to state 54
    T_Break          shift, and go to state 55
    T_Do             shift, and go to state 56
    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Switch         shift, and go to state 59
    T_Case           shift, and go to state 60
    T_Default        shift, and go to state 61
    T_Semicolon      shift, and go to state 62
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_LeftBrace      shift, and go to state 66
    T_RightBrace     shift, and go to state 202
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 88
    declaration_statement                 go to state 92
    statement                             go to state 166
    simple_statement                      go to state 94
    compound_statement_with_scope         go to state 95
    expression_statement                  go to state 98
    selection_statement                   go to state 99
    switch_statement                      go to state 100
    case_label                            go to state 101
    iteration_statement                   go to state 102
    jump_statement                        go to state 103


state 165

  116 compound_statement_no_new_scope: T_LeftBrace statement_list T_RightBrace .

    $default  reduce using rule 116 (compound_statement_no_new_scope)


state 166

  122 statement_list: statement_list statement .

    $default  reduce using rule 122 (statement_list)


state 167

   66 function_header: type_qualifier type_specifier T_Identifier T_LeftParen .

    $default  reduce using rule 66 (function_header)


state 168

   71 single_declaration: type_specifier T_Identifier T_Equal assignment_expression .

    $default  reduce using rule 71 (single_declaration)


state 169

   78 array_specifier: T_LeftBracket conditional_expression T_RightBracket .

    $default  reduce using rule 78 (array_specifier)


state 170

  127 condition: assignment_expression .

    $default  reduce using rule 127 (condition)


state 171

  129 condition: type_qualifier . type_specifier T_Identifier T_Equal assignment_expression

    T_Void   shift, and go to state 1
    T_Bool   shift, and go to state 2
    T_Int    shift, and go to state 3
    T_Float  shift, and go to state 4
    T_Mat2   shift, and go to state 9
    T_Mat3   shift, and go to state 10
    T_Mat4   shift, and go to state 11
    T_Vec2   shift, and go to state 12
    T_Vec3   shift, and go to state 13
    T_Vec4   shift, and go to state 14
    T_Ivec2  shift, and go to state 15
    T_Ivec3  shift, and go to state 16
    T_Ivec4  shift, and go to state 17
    T_Bvec2  shift, and go to state 18
    T_Bvec3  shift, and go to state 19
    T_Bvec4  shift, and go to state 20
    T_Uint   shift, and go to state 21
    T_Uvec2  shift, and go to state 22
    T_Uvec3  shift, and go to state 23
    T_Uvec4  shift, and go to state 24

    type_specifier           go to state 203
    type_specifier_nonarray  go to state 35


state 172

  128 condition: type_specifier . T_Identifier T_Equal assignment_expression

    T_Identifier  shift, and go to state 204


state 173

  133 iteration_statement: T_While T_LeftParen condition . T_RightParen statement_no_new_scope

    T_RightParen  shift, and go to state 205


state 174

  137 for_init_statement: declaration_statement .

    $default  reduce using rule 137 (for_init_statement)


state 175

  136 for_init_statement: expression_statement .

    $default  reduce using rule 136 (for_init_statement)


state 176

  135 iteration_statement: T_For T_LeftParen for_init_statement . for_rest_statement T_RightParen statement_no_new_scope

    T_Void           shift, and go to state 1
    T_Bool           shift, and go to state 2
    T_Int            shift, and go to state 3
    T_Float          shift, and go to state 4
    T_Const          shift, and go to state 5
    T_Uniform        shift, and go to state 6
    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_In             shift, and go to state 7
    T_Out            shift, and go to state 8
    T_Mat2           shift, and go to state 9
    T_Mat3           shift, and go to state 10
    T_Mat4           shift, and go to state 11
    T_Vec2           shift, and go to state 12
    T_Vec3           shift, and go to state 13
    T_Vec4           shift, and go to state 14
    T_Ivec2          shift, and go to state 15
    T_Ivec3          shift, and go to state 16
    T_Ivec4          shift, and go to state 17
    T_Bvec2          shift, and go to state 18
    T_Bvec3          shift, and go to state 19
    T_Bvec4          shift, and go to state 20
    T_Uint           shift, and go to state 21
    T_Uvec2          shift, and go to state 22
    T_Uvec3          shift, and go to state 23
    T_Uvec4          shift, and go to state 24
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 170
    type_qualifier                        go to state 171
    type_specifier                        go to state 172
    type_specifier_nonarray               go to state 35
    condition                             go to state 206
    conditionopt                          go to state 207
    for_rest_statement                    go to state 208


state 177

  125 selection_statement: T_If T_LeftParen assignment_expression . T_RightParen statement_with_scope
  126                    | T_If T_LeftParen assignment_expression . T_RightParen statement_with_scope T_Else statement_with_scope

    T_RightParen  shift, and go to state 209


state 178

  143 jump_statement: T_Return assignment_expression T_Semicolon .

    $default  reduce using rule 143 (jump_statement)


state 179

  134 iteration_statement: T_Do statement_with_scope T_While . T_LeftParen assignment_expression T_RightParen T_Semicolon

    T_LeftParen  shift, and go to state 210


state 180

  130 switch_statement: T_Switch T_LeftParen assignment_expression . T_RightParen T_LeftBrace statement_list T_RightBrace

    T_RightParen  shift, and go to state 211


state 181

  131 case_label: T_Case assignment_expression T_Colon .

    $default  reduce using rule 131 (case_label)


state 182

    8 primary_expression: T_LeftParen assignment_expression T_RightParen .

    $default  reduce using rule 8 (primary_expression)


state 183

  114 compound_statement_with_scope: T_LeftBrace statement_list T_RightBrace .

    $default  reduce using rule 114 (compound_statement_with_scope)


state 184

   13 postfix_expression: postfix_expression T_Dot T_Identifier .

    $default  reduce using rule 13 (postfix_expression)


state 185

   10 postfix_expression: postfix_expression T_LeftBracket assignment_expression . T_RightBracket

    T_RightBracket  shift, and go to state 212


state 186

   21 function_call_header_with_parameters: function_call_header_with_parameters T_Comma assignment_expression .

    $default  reduce using rule 21 (function_call_header_with_parameters)


state 187

   51 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 51 (assignment_expression)


state 188

   31 multiplicative_expression: multiplicative_expression T_Star unary_expression .

    $default  reduce using rule 31 (multiplicative_expression)


state 189

   32 multiplicative_expression: multiplicative_expression T_Slash unary_expression .

    $default  reduce using rule 32 (multiplicative_expression)


state 190

   31 multiplicative_expression: multiplicative_expression . T_Star unary_expression
   32                          | multiplicative_expression . T_Slash unary_expression
   35 additive_expression: additive_expression T_Dash multiplicative_expression .

    T_Star   shift, and go to state 146
    T_Slash  shift, and go to state 147

    $default  reduce using rule 35 (additive_expression)


state 191

   31 multiplicative_expression: multiplicative_expression . T_Star unary_expression
   32                          | multiplicative_expression . T_Slash unary_expression
   34 additive_expression: additive_expression T_Plus multiplicative_expression .

    T_Star   shift, and go to state 146
    T_Slash  shift, and go to state 147

    $default  reduce using rule 34 (additive_expression)


state 192

   34 additive_expression: additive_expression . T_Plus multiplicative_expression
   35                    | additive_expression . T_Dash multiplicative_expression
   39 relational_expression: relational_expression T_LessEqual additive_expression .

    T_Dash  shift, and go to state 148
    T_Plus  shift, and go to state 149

    T_Dash    [reduce using rule 39 (relational_expression)]
    T_Plus    [reduce using rule 39 (relational_expression)]
    $default  reduce using rule 39 (relational_expression)


state 193

   34 additive_expression: additive_expression . T_Plus multiplicative_expression
   35                    | additive_expression . T_Dash multiplicative_expression
   40 relational_expression: relational_expression T_GreaterEqual additive_expression .

    T_Dash  shift, and go to state 148
    T_Plus  shift, and go to state 149

    T_Dash    [reduce using rule 40 (relational_expression)]
    T_Plus    [reduce using rule 40 (relational_expression)]
    $default  reduce using rule 40 (relational_expression)


state 194

   34 additive_expression: additive_expression . T_Plus multiplicative_expression
   35                    | additive_expression . T_Dash multiplicative_expression
   37 relational_expression: relational_expression T_LeftAngle additive_expression .

    T_Dash  shift, and go to state 148
    T_Plus  shift, and go to state 149

    T_Dash    [reduce using rule 37 (relational_expression)]
    T_Plus    [reduce using rule 37 (relational_expression)]
    $default  reduce using rule 37 (relational_expression)


state 195

   34 additive_expression: additive_expression . T_Plus multiplicative_expression
   35                    | additive_expression . T_Dash multiplicative_expression
   38 relational_expression: relational_expression T_RightAngle additive_expression .

    T_Dash  shift, and go to state 148
    T_Plus  shift, and go to state 149

    T_Dash    [reduce using rule 38 (relational_expression)]
    T_Plus    [reduce using rule 38 (relational_expression)]
    $default  reduce using rule 38 (relational_expression)


state 196

   37 relational_expression: relational_expression . T_LeftAngle additive_expression
   38                      | relational_expression . T_RightAngle additive_expression
   39                      | relational_expression . T_LessEqual additive_expression
   40                      | relational_expression . T_GreaterEqual additive_expression
   42 equality_expression: equality_expression T_EQ relational_expression .

    T_LessEqual     shift, and go to state 150
    T_GreaterEqual  shift, and go to state 151
    T_LeftAngle     shift, and go to state 152
    T_RightAngle    shift, and go to state 153

    $default  reduce using rule 42 (equality_expression)


state 197

   37 relational_expression: relational_expression . T_LeftAngle additive_expression
   38                      | relational_expression . T_RightAngle additive_expression
   39                      | relational_expression . T_LessEqual additive_expression
   40                      | relational_expression . T_GreaterEqual additive_expression
   43 equality_expression: equality_expression T_NE relational_expression .

    T_LessEqual     shift, and go to state 150
    T_GreaterEqual  shift, and go to state 151
    T_LeftAngle     shift, and go to state 152
    T_RightAngle    shift, and go to state 153

    $default  reduce using rule 43 (equality_expression)


state 198

   42 equality_expression: equality_expression . T_EQ relational_expression
   43                    | equality_expression . T_NE relational_expression
   45 logical_and_expression: logical_and_expression T_And equality_expression .

    T_EQ  shift, and go to state 154
    T_NE  shift, and go to state 155

    $default  reduce using rule 45 (logical_and_expression)


state 199

   45 logical_and_expression: logical_and_expression . T_And equality_expression
   47 logical_or_expression: logical_or_expression T_Or logical_and_expression .

    T_And  shift, and go to state 156

    $default  reduce using rule 47 (logical_or_expression)


state 200

   49 conditional_expression: logical_or_expression T_Question assignment_expression . T_Colon assignment_expression

    T_Colon  shift, and go to state 213


state 201

   69 single_declaration: type_qualifier type_specifier T_Identifier .

    $default  reduce using rule 69 (single_declaration)


state 202

  118 compound_statement_no_new_scope: T_LeftBrace var_decl_list statement_list T_RightBrace .

    $default  reduce using rule 118 (compound_statement_no_new_scope)


state 203

  129 condition: type_qualifier type_specifier . T_Identifier T_Equal assignment_expression

    T_Identifier  shift, and go to state 214


state 204

  128 condition: type_specifier T_Identifier . T_Equal assignment_expression

    T_Equal  shift, and go to state 215


state 205

  133 iteration_statement: T_While T_LeftParen condition T_RightParen . statement_no_new_scope

    T_While          shift, and go to state 51
    T_For            shift, and go to state 52
    T_If             shift, and go to state 53
    T_Return         shift, and go to state 54
    T_Break          shift, and go to state 55
    T_Do             shift, and go to state 56
    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Switch         shift, and go to state 59
    T_Case           shift, and go to state 60
    T_Default        shift, and go to state 61
    T_Semicolon      shift, and go to state 62
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_LeftBrace      shift, and go to state 40
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 88
    declaration_statement                 go to state 92
    statement_no_new_scope                go to state 216
    simple_statement                      go to state 217
    compound_statement_no_new_scope       go to state 218
    expression_statement                  go to state 98
    selection_statement                   go to state 99
    switch_statement                      go to state 100
    case_label                            go to state 101
    iteration_statement                   go to state 102
    jump_statement                        go to state 103


state 206

  138 conditionopt: condition .

    $default  reduce using rule 138 (conditionopt)


state 207

  139 for_rest_statement: conditionopt . T_Semicolon
  140                   | conditionopt . T_Semicolon assignment_expression

    T_Semicolon  shift, and go to state 219


state 208

  135 iteration_statement: T_For T_LeftParen for_init_statement for_rest_statement . T_RightParen statement_no_new_scope

    T_RightParen  shift, and go to state 220


state 209

  125 selection_statement: T_If T_LeftParen assignment_expression T_RightParen . statement_with_scope
  126                    | T_If T_LeftParen assignment_expression T_RightParen . statement_with_scope T_Else statement_with_scope

    T_While          shift, and go to state 51
    T_For            shift, and go to state 52
    T_If             shift, and go to state 53
    T_Return         shift, and go to state 54
    T_Break          shift, and go to state 55
    T_Do             shift, and go to state 56
    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Switch         shift, and go to state 59
    T_Case           shift, and go to state 60
    T_Default        shift, and go to state 61
    T_Semicolon      shift, and go to state 62
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_LeftBrace      shift, and go to state 40
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 88
    declaration_statement                 go to state 92
    statement_with_scope                  go to state 221
    simple_statement                      go to state 119
    compound_statement_no_new_scope       go to state 120
    expression_statement                  go to state 98
    selection_statement                   go to state 99
    switch_statement                      go to state 100
    case_label                            go to state 101
    iteration_statement                   go to state 102
    jump_statement                        go to state 103


state 210

  134 iteration_statement: T_Do statement_with_scope T_While T_LeftParen . assignment_expression T_RightParen T_Semicolon

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 222


state 211

  130 switch_statement: T_Switch T_LeftParen assignment_expression T_RightParen . T_LeftBrace statement_list T_RightBrace

    T_LeftBrace  shift, and go to state 223


state 212

   10 postfix_expression: postfix_expression T_LeftBracket assignment_expression T_RightBracket .

    $default  reduce using rule 10 (postfix_expression)


state 213

   49 conditional_expression: logical_or_expression T_Question assignment_expression T_Colon . assignment_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 224


state 214

  129 condition: type_qualifier type_specifier T_Identifier . T_Equal assignment_expression

    T_Equal  shift, and go to state 225


state 215

  128 condition: type_specifier T_Identifier T_Equal . assignment_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 226


state 216

  133 iteration_statement: T_While T_LeftParen condition T_RightParen statement_no_new_scope .

    $default  reduce using rule 133 (iteration_statement)


state 217

  103 statement_no_new_scope: simple_statement .

    $default  reduce using rule 103 (statement_no_new_scope)


state 218

  102 statement_no_new_scope: compound_statement_no_new_scope .

    $default  reduce using rule 102 (statement_no_new_scope)


state 219

  139 for_rest_statement: conditionopt T_Semicolon .
  140                   | conditionopt T_Semicolon . assignment_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]
    $default     reduce using rule 139 (for_rest_statement)

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 227


state 220

  135 iteration_statement: T_For T_LeftParen for_init_statement for_rest_statement T_RightParen . statement_no_new_scope

    T_While          shift, and go to state 51
    T_For            shift, and go to state 52
    T_If             shift, and go to state 53
    T_Return         shift, and go to state 54
    T_Break          shift, and go to state 55
    T_Do             shift, and go to state 56
    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Switch         shift, and go to state 59
    T_Case           shift, and go to state 60
    T_Default        shift, and go to state 61
    T_Semicolon      shift, and go to state 62
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_LeftBrace      shift, and go to state 40
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 88
    declaration_statement                 go to state 92
    statement_no_new_scope                go to state 228
    simple_statement                      go to state 217
    compound_statement_no_new_scope       go to state 218
    expression_statement                  go to state 98
    selection_statement                   go to state 99
    switch_statement                      go to state 100
    case_label                            go to state 101
    iteration_statement                   go to state 102
    jump_statement                        go to state 103


state 221

  125 selection_statement: T_If T_LeftParen assignment_expression T_RightParen statement_with_scope .
  126                    | T_If T_LeftParen assignment_expression T_RightParen statement_with_scope . T_Else statement_with_scope

    T_Else  shift, and go to state 229

    T_Else    [reduce using rule 125 (selection_statement)]
    $default  reduce using rule 125 (selection_statement)


state 222

  134 iteration_statement: T_Do statement_with_scope T_While T_LeftParen assignment_expression . T_RightParen T_Semicolon

    T_RightParen  shift, and go to state 230


state 223

  130 switch_statement: T_Switch T_LeftParen assignment_expression T_RightParen T_LeftBrace . statement_list T_RightBrace

    T_While          shift, and go to state 51
    T_For            shift, and go to state 52
    T_If             shift, and go to state 53
    T_Return         shift, and go to state 54
    T_Break          shift, and go to state 55
    T_Do             shift, and go to state 56
    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Switch         shift, and go to state 59
    T_Case           shift, and go to state 60
    T_Default        shift, and go to state 61
    T_Semicolon      shift, and go to state 62
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_LeftBrace      shift, and go to state 66
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 88
    declaration_statement                 go to state 92
    statement                             go to state 93
    simple_statement                      go to state 94
    compound_statement_with_scope         go to state 95
    statement_list                        go to state 231
    expression_statement                  go to state 98
    selection_statement                   go to state 99
    switch_statement                      go to state 100
    case_label                            go to state 101
    iteration_statement                   go to state 102
    jump_statement                        go to state 103


state 224

   49 conditional_expression: logical_or_expression T_Question assignment_expression T_Colon assignment_expression .

    $default  reduce using rule 49 (conditional_expression)


state 225

  129 condition: type_qualifier type_specifier T_Identifier T_Equal . assignment_expression

    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 232


state 226

  128 condition: type_specifier T_Identifier T_Equal assignment_expression .

    $default  reduce using rule 128 (condition)


state 227

  140 for_rest_statement: conditionopt T_Semicolon assignment_expression .

    $default  reduce using rule 140 (for_rest_statement)


state 228

  135 iteration_statement: T_For T_LeftParen for_init_statement for_rest_statement T_RightParen statement_no_new_scope .

    $default  reduce using rule 135 (iteration_statement)


state 229

  126 selection_statement: T_If T_LeftParen assignment_expression T_RightParen statement_with_scope T_Else . statement_with_scope

    T_While          shift, and go to state 51
    T_For            shift, and go to state 52
    T_If             shift, and go to state 53
    T_Return         shift, and go to state 54
    T_Break          shift, and go to state 55
    T_Do             shift, and go to state 56
    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Switch         shift, and go to state 59
    T_Case           shift, and go to state 60
    T_Default        shift, and go to state 61
    T_Semicolon      shift, and go to state 62
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_LeftBrace      shift, and go to state 40
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 88
    declaration_statement                 go to state 92
    statement_with_scope                  go to state 233
    simple_statement                      go to state 119
    compound_statement_no_new_scope       go to state 120
    expression_statement                  go to state 98
    selection_statement                   go to state 99
    switch_statement                      go to state 100
    case_label                            go to state 101
    iteration_statement                   go to state 102
    jump_statement                        go to state 103


state 230

  134 iteration_statement: T_Do statement_with_scope T_While T_LeftParen assignment_expression T_RightParen . T_Semicolon

    T_Semicolon  shift, and go to state 234


state 231

  122 statement_list: statement_list . statement
  130 switch_statement: T_Switch T_LeftParen assignment_expression T_RightParen T_LeftBrace statement_list . T_RightBrace

    T_While          shift, and go to state 51
    T_For            shift, and go to state 52
    T_If             shift, and go to state 53
    T_Return         shift, and go to state 54
    T_Break          shift, and go to state 55
    T_Do             shift, and go to state 56
    T_Inc            shift, and go to state 57
    T_Dec            shift, and go to state 58
    T_Switch         shift, and go to state 59
    T_Case           shift, and go to state 60
    T_Default        shift, and go to state 61
    T_Semicolon      shift, and go to state 62
    T_Dash           shift, and go to state 63
    T_Plus           shift, and go to state 64
    T_LeftParen      shift, and go to state 65
    T_LeftBrace      shift, and go to state 66
    T_RightBrace     shift, and go to state 235
    T_Identifier     shift, and go to state 68
    T_IntConstant    shift, and go to state 69
    T_FloatConstant  shift, and go to state 70
    T_BoolConstant   shift, and go to state 71

    T_LeftParen  [reduce using rule 23 (function_identifier)]

    primary_expression                    go to state 72
    postfix_expression                    go to state 73
    function_call_generic                 go to state 74
    function_call_header_no_parameters    go to state 75
    function_call_header_with_parameters  go to state 76
    function_call_header                  go to state 77
    function_identifier                   go to state 78
    unary_expression                      go to state 79
    unary_operator                        go to state 80
    multiplicative_expression             go to state 81
    additive_expression                   go to state 82
    relational_expression                 go to state 83
    equality_expression                   go to state 84
    logical_and_expression                go to state 85
    logical_or_expression                 go to state 86
    conditional_expression                go to state 87
    assignment_expression                 go to state 88
    declaration_statement                 go to state 92
    statement                             go to state 166
    simple_statement                      go to state 94
    compound_statement_with_scope         go to state 95
    expression_statement                  go to state 98
    selection_statement                   go to state 99
    switch_statement                      go to state 100
    case_label                            go to state 101
    iteration_statement                   go to state 102
    jump_statement                        go to state 103


state 232

  129 condition: type_qualifier type_specifier T_Identifier T_Equal assignment_expression .

    $default  reduce using rule 129 (condition)


state 233

  126 selection_statement: T_If T_LeftParen assignment_expression T_RightParen statement_with_scope T_Else statement_with_scope .

    $default  reduce using rule 126 (selection_statement)


state 234

  134 iteration_statement: T_Do statement_with_scope T_While T_LeftParen assignment_expression T_RightParen T_Semicolon .

    $default  reduce using rule 134 (iteration_statement)


state 235

  130 switch_statement: T_Switch T_LeftParen assignment_expression T_RightParen T_LeftBrace statement_list T_RightBrace .

    $default  reduce using rule 130 (switch_statement)
